WITH RECURSIVE GENERATIONS AS (
    -- 1세대 개체 찾기
    SELECT ID, PARENT_ID, 1 AS GENERATION
    FROM ECOLI_DATA
    WHERE PARENT_ID IS NULL

    UNION ALL

    -- 재귀적으로 다음 세대들 찾기
    SELECT E.ID,E.PARENT_ID,G.GENERATION + 1
    FROM ECOLI_DATA E
    JOIN GENERATIONS G ON E.PARENT_ID = G.ID
),
-- 각 개체별로 자식의 수를 계산하는 CTE
CHILD_COUNT AS (
   SELECT G.ID, G.GENERATION, COUNT(C.ID) AS CHILDREN_COUNT
   FROM GENERATIONS G
   LEFT JOIN ECOLI_DATA C ON G.ID = C.PARENT_ID
   -- LEFT JOIN 을 사용하는 이유
   -- - 자식이 없는 개체도 결과에 포함 시키기 위해
   -- - 자식이 없으면 COUNT(C.ID) = 0이 됨
   GROUP BY G.ID, G.GENERATION
)
SELECT COUNT(*) AS COUNT, GENERATION
FROM CHILD_COUNT
WHERE CHILDREN_COUNT = 0 -- 자식이 없는 개체만 필터링
GROUP BY GENERATION
ORDER BY GENERATION ASC;